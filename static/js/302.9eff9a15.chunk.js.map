{"version":3,"file":"static/js/302.9eff9a15.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/Phonebook/phonebook.modules.css?ec27","modules/Phonebook/ContactList/ContactList.jsx","modules/Phonebook/Filter/Filter.jsx","modules/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/modules/Phonebook/NavBarAuth/phonebook-auth.module.css?68da","modules/Phonebook/NavBarAuth/PhonebookAuth.jsx","modules/Phonebook/NavBarUser/NavBarUser.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","modules/Phonebook/Phonebook.jsx","redux/auth/auth-selector.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","/* eslint-disable react/no-typos */\nimport PropTypes from 'prop-types'\n\n\nconst ContactList = ({ removeContact, items }) => {\n    const contacts = items.map(({ id, name, phone }) => <li key={id}>{name}: {phone}\n        <button onClick={() => removeContact(id)} type=\"button\">delete</button></li>)\n\n    return (\n        <ul>\n            {contacts}\n        </ul>\n    )\n}\n\n\nexport default ContactList;\n\n\nContactList.defaultProps = {\n    items: []\n}\n\nContactList.PropTypes = {\n    removeContact: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequireds,\n        name: PropTypes.string.isRequireds,\n        phone: PropTypes.string.isRequireds,\n    }))\n}\n\n","/* eslint-disable react/no-typos */\nimport PropTypes from 'prop-types'\n\nconst Filter = ({ handelChange, value }) => {\n    return (\n        <div >\n            <h5>Find contacts by name</h5>\n            <input value={value} name='filter' onChange={handelChange} />\n        </div>\n    )\n}\n\nexport default Filter;\n\n\n\nFilter.propTypes = {\n    handelChange: PropTypes.func.isRequired,\n}","import { useState } from \"react\"\nimport PropTyper from \"prop-types\";\n\n\nconst ContactForm = ({ onSubmit }) => {\n    const [state, setState] = useState({\n        name: \"\",\n        phone: \"\",\n    });\n\n    const handelChange = ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => {\n            return { ...prevState, [name]: value }\n        })\n    }\n\n\n\n    const handelSubmit = e => {\n        e.preventDefault();\n        onSubmit({ name, phone });\n        setState({ name: \"\", phone: \"\", });\n    }\n\n    const { name, phone } = state;\n\n    return (\n        <form onSubmit={handelSubmit}>\n            <div>\n                <input\n                    onChange={handelChange}\n                    value={name}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </div>\n            <h4>Number</h4>\n            <div>\n                <input\n                    onChange={handelChange}\n                    value={phone}\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </div>\n            <button type='submit'>Add Contact</button>\n        </form>\n    )\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    onSubmit: PropTyper.func.isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"phonebook-auth_link__c2qXA\"};","\nimport { NavLink } from \"react-router-dom\";\nimport style from \"./phonebook-auth.module.css\";\n\nconst PhonebookAuth = () => {\n    return (\n        <div>\n            <NavLink to=\"/register\" className={style.link}>Register</NavLink> |\n            <NavLink to=\"/login\" className={style.link}>Login</NavLink>\n        </div>\n    )\n}\n\nexport default PhonebookAuth;","// import style from \"./navbar-user.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { getUsre } from \"redux/auth/auth-selector\";\n\nconst NavBarUser = () => {\n    const { name } = useSelector(getUsre);\n    return (\n        <div>\n            {name}, <button>Logout</button>\n        </div>\n    )\n}\n\nexport default NavBarUser","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n    if (!filter) {\n        return contacts.items\n    }\n    const normFilter = filter.toLowerCase()\n    const result = contacts.items.filter(({ name, phone }) => {\n        return (name.toLowerCase().includes(normFilter) || phone.toLowerCase().includes(normFilter))\n    })\n    return result;\n}","export const getFilter = ({ filter }) => filter;","import { useEffect } from \"react\";\nimport styles from './phonebook.modules.css';\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PhonebookAuth from 'modules/Phonebook/NavBarAuth/PhonebookAuth';\nimport NavBarUser from \"./NavBarUser/NavBarUser\";\nimport { isUserLogin } from \"redux/auth/auth-selector\";\nimport { setFilter } from \"redux/filter/filter-slice\";\nimport { getFilteredContacts } from \"redux/contacts/contacts-selectors\";\nimport { getFilter } from \"redux/filter/filter-selectors\";\nimport { fetchAllContacts, fetchAddContact, fetchDeleteContact } from \"redux/contacts/contacts-operatins\";\n\nconst Phonebook = () => {\n\n    const filteredContacts = useSelector(getFilteredContacts);\n\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchAllContacts())\n    }, [dispatch])\n\n    const onAddContact = ({ name, phone }) => {\n        dispatch(fetchAddContact({ name, phone }));\n    }\n\n    const onRemoveContact = (id) => {\n        dispatch(fetchDeleteContact(id));\n    }\n\n    const handelFilter = ({ target }) => {\n        dispatch(setFilter(target.value))\n    };\n    const isLogin = useSelector(isUserLogin);\n\n    return (\n        <div>\n            {!isLogin && <PhonebookAuth />}\n            {isLogin && <NavBarUser />}\n            <h3>Phonebook</h3>\n            <div>\n                <div className={styles.wrapper}>\n                    <h4>Name</h4>\n                    <ContactForm onSubmit={onAddContact} />\n                </div>\n                <div>\n                    <h4>Contacts</h4>\n                    <Filter value={filter} handelChange={handelFilter} />\n                    <ContactList removeContact={onRemoveContact} items={filteredContacts} />\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Phonebook;\n\n\n\n","export const isUserLogin = ({ auth }) => auth.isLogin;\nexport const getUsre = ({ auth }) => auth.user;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContactList","removeContact","contacts","items","map","id","name","phone","onClick","type","defaultProps","PropTypes","handelChange","value","onChange","onSubmit","useState","state","setState","target","prevState","e","preventDefault","pattern","title","required","to","className","style","useSelector","getUsre","getFilteredContacts","filter","normFilter","toLowerCase","includes","getFilter","filteredContacts","dispatch","useDispatch","useEffect","fetchAllContacts","isLogin","isUserLogin","styles","fetchAddContact","setFilter","fetchDeleteContact","auth","user","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}